# Path should point out the hoisted node_modules
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '11.0'

target 'SendbirdUIKitSample' do
  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # to enable hermes on iOS, change `false` to `true` and then install pods
    :hermes_enabled => false
  )

  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable the next line.
  # use_flipper!()
  
  def find_and_replace(dir, findstr, replacestr)
    Dir[dir].each do |name|
        text = File.read(name)
        replace = text.gsub(findstr,replacestr)
        if text != replace
            puts "Fix: " + name
            File.open(name, "w") { |file| file.puts replace }
            STDOUT.flush
        end
    end
    Dir[dir + '*/'].each(&method(:find_and_replace))
  end


  post_install do |installer|
    
    find_and_replace("../node_modules/react-native/React/Base/RCTKeyCommands.m",
                            "_modifierFlags",
                            "_modifierEventFlags")
    find_and_replace("../node_modules/react-native/React/Base/RCTKeyCommands.m",
                            "_modifiedInput",
                            "_modifiedEventInput")
    find_and_replace("../node_modules/react-native/React/Base/RCTKeyCommands.m",
                            "_isKeyDown",
                            "_isKeyEventDown")
    find_and_replace("../node_modules/react-native/React/DevSupport/RCTPackagerClient.h",
                            "handleNotification",
                            "handlePackageNotification")

    find_and_replace("../node_modules/react-native/React/DevSupport/RCTPackagerConnection.mm",
                            "handleNotification",
                            "handlePackageNotification")
    
    react_native_post_install(installer)
    __apply_Xcode_12_5_M1_post_install_workaround(installer)
    
    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
          config.build_settings['EXPANDED_CODE_SIGN_IDENTITY'] = ''
          config.build_settings['CODE_SIGNING_REQUIRED'] = 'NO'
          config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
        end
    end
  end
end
